%% Optimization
H_i = sparse((H_i + H_i')/2);
%% constraints
AineqV = [];   bineqV = [];
AeqV = [];      beqV = [];
%% x(k+1|t)=A*x(k|t)+B*u(k|t)
switch i
    case 1
        AeqV =[AeqV;
        Tr_x_i_1_d(:,:,i) - Bii*Tr_u_i_0_d(:,:,i)
        ];
        beqV = [beqV;
        Aii*x_i + Aip1*x_ip1;
        ];
    case M
        AeqV =[AeqV;
        Tr_x_i_1_d(:,:,i) - Bii*Tr_u_i_0_d(:,:,i)
        ];
        beqV = [beqV;
        Aii*x_i + Aim1*x_im1;
        ];
    otherwise
        AeqV =[AeqV;
        Tr_x_i_1_d(:,:,i) - Bii*Tr_u_i_0_d(:,:,i)
        ];
        beqV = [beqV;
        Aii*x_i + Aim1*x_im1 + Aip1*x_ip1;
        ];
end
%% constraint matrix
Aineq = [AineqV ; AineqC_d(:,:,i)];
bineq = [bineqV ; bineqC_d(:,:,i)];
Aeq = [AeqV ; AeqC_d(:,:,i)];
beq = [beqV ; beqC_d(:,:,i)];
%% cplex
if(strcmpi(solver,'cplex'))
    options = cplexoptimset; options.Diagnostics = 'off'; options.Display = 'off';
    [Usol, fval, exitflag, output1] = cplexqp(H_d(:,:,i), f_i, Aineq, bineq, Aeq, beq, [], [], [], options);
    if isempty(Usol)~=0
        disp(['no optimal answers : exitflag = ', num2str(exitflag)])
        break;
    end
end
%% gurobi
if(strcmpi(solver,'gurobi'))
    params.outputflag = 0;
    model.modelsense = 'min'; % ç≈è¨âªÇ©ç≈ëÂâªÇ©
    model.Q = H_i;
    model.obj = f_i; % 
%     model.vtype =  ctype;
    model.lb = -inf*ones(1,(n_u+n_x)*N);
    model.ub = inf*ones(1,(n_u+n_x)*N);
    model.sense = [repmat('<',[1,length(bineq)]) repmat('=',[1,length(beq)])];
    model.A = sparse([Aineq;Aeq]);
    model.rhs = [bineq;beq];

    Uopt = gurobi(model, params); % gurobi Ç≈åvéZ
    if strcmpi(Uopt.status,'optimal')
        Usol = Uopt.x;
    else
        disp(['no optimal answers : Uopt.status = ', Uopt.status])
        t = t - 1;
        break;
    end
end
%%
x_i_1 = 
u_i = Tr_u_i_0*Usol;